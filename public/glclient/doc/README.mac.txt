#目次* 配布物の内容* ランチャーの起動方法* 設定項目について* システムプロパティについて* スタイルファイルについて* プロキシについて# 配布物の内容4種類の配布物があります。* monsiaj本体パッケージ monsiaj-bin-YYYYMMDD.zip* monsiaj本体パッケージ(MacOS X アプリケーションバンドル版) monsiaj-bin-macos-YYYYMMDD.zip* ソースパッケージ monsiaj-src-YYYYMMDD.zip* monsiaj自動更新ランチャーパッケージ monsiaj-YYYYMMDD.zipYYYYMMDDは配布物作成の年月日を表します。## monsiaj本体パッケージ* docs/README.txt  * 説明書* docs/HOWTOBUILD.txt  * ビルド説明書* jmareceipt.jar  * ランチャー本体* pandaglade.jar  * gladeテストモジュール* PDFRenderer.jar  * PDF描画ライブラリ* log4j-api-2.0-*.jar,log4-core-2.0-*.jar  * ログ出力モジュール* ilf-gpk.jar  * InfoNodeルックアンドフィールモジュール* nimrodlf.jar  * Nimrodルックアンドフィールモジュール* misc/jma-receipt.jpg  * 日レセ専用ランチャーアイコンファイル* theme/*.theme  * Nimrod用テーマファイル## monsiaj本体パッケージ(MacOS X アプリケーションバンドル版)* README.txt  * 説明書* HOWTOBUILD.txt  * ビルド説明書* JMAReceipt.app  * 日レセアプリケーションバンドル版* theme/*.theme  * Nimrod用テーマファイル## ソースパッケージの内容* README.txt  * 説明書* HOWTOBUILD.txt  * ビルド説明書* libs/  * 各種依存ライブラリ* src/  * ソースコード* src/PDFRenderer_src.zip  * pdf-rendererの改変後のソースコード* build.xml  * antのビルド定義XML## ランチャーの起動方法ファイルマネージャ(エクスプローラ、ファインダなど)から、jmareceipt.jarファイルをダブルクリックして起動します。起動の際には、配布されたjarファイルがすべて同一のディレクトリ(フォルダ)にある必要があります。ランチャーを起動したら、各種設定を行ってからランチャーの実行ボタンをクリックし、アプリケーションを実行します。## 設定項目についてランチャーで各種設定を行うことが出来ます。設定項目は3つのタブに分かれています。### 基本設定タブ* ホスト(ポート)  * 接続するホストとポート番号を指定します。通常、ポート番号は 8000 です。* アプリケーション  * 実行するアプリケーションを panda:アプリケーション名 の形式で指定します。日レセの場合は、panda:orca00 となります。* ユーザー  * ユーザー名を入力します。SSLクライアント認証を使用する場合は、入力しても無視されます。* パスワード  * パスワードを入力します。入力した文字の代わりに * が表示されます。SSLクライアント認証を使用する場合は、入力しても無視されます。* パスワードを保存  * チェックすると、パスワードをシステムに保存するようになります。暗号化は行わずそのまま保存するので、セキュリティの観点からは推奨されません。チェックを解除すると、今までシステムに保存していたパスワードは削除されます。### SSLタブ* SSLを使用  * 通信にSSLを使用する場合、チェックします。* クライアント証明書  * クライアント証明書ファイル(PKCS#12形式)を指定します。クライアント認証を使用しない場合は無視されます。* 証明書パスワード  * クライアント証明書のパスワードを入力します。クライアント認証を使用しない場合は無視されます。* 証明書パスワードを保存  * チェックすると、証明書パスワードをシステムに保存するようになります。注意点は基本設定タブのパスワードと同様です。### その他の設定タブ* スタイル  * スタイルファイルを指定します。無指定時には内蔵のスタイルファイルが使用されます。* ルック&フィール  * 画面の外見を指定します。最初に実行した際に、実行環境に合わせたもの(WindowsならWindows風など)が選択されていますが、他の物に変更しても問題ありません。* ルック&フィールのテーマ  * ルック＆フィールのテーマ(配色)を変更します。* タイマーの使用  * チェックすると、入力しながら自動的に検索を絞り込む機能が有効になります。* タイマー起動時間  * 検索を開始するまでに待機する時間を指定します。単位はミリ秒(1000分の1秒)です。* 追加システムプロパティ  * 必要に応じて、その他のプロパティを1行に1つの形式で記述します。### 情報タブmonsiaj、Java、OSのバージョンが表示されます。## サーバ設定ランチャー上部のサーバ選択コンボボックスでサーバ設定名を選択すると、ランチャーの設定を切替えることができます。### サーバ設定の登録ランチャー下部の設定ボタンを押してサーバ設定ダイアログを起動します。1. 新規作成ボタンを押して、新規作成ダイアログを起動します。2. 各設定項目を設定します。設定は説明の項目を除いてランチャーと同様です。説明の項目は設定名になります。3. 設定後、OKボタンを押すと登録完了です。### サーバ設定の変更1. ランチャー下部の設定ボタンを押してサーバ設定ダイアログを起動します。2. リストから変更したい設定を選択して、編集ボタンを押します。3. 編集ダイアログで設定項目を変更します。4. 設定後、OKボタンを押すと変更完了です。### サーバ設定の削除1. ランチャー下部の設定ボタンを押してサーバ設定ダイアログを起動します。2. リストから削除したい設定を選択して、削除ボタンを押します。3. 確認ダイアログが表示されます。4. OKボタンを押すと削除完了です。## システムプロパティについてランチャーの「その他の設定」タブにある「追加システムプロパティ」欄に記述することで、一部の動作をカスタマイズすることが出来ます。 プロパティ名=設定値という書式で、1行に1つずつ記述します。### 設定できるプロパティ#### monsia.user.fontプログラム全体で使用するフォントを指定します。値は「フォント名-書体-サイズ」の形です。フォントは、プラットフォーム共通のJava論理フォント名(Serif/SansSerif/Monospaced/Dialog/DialogInput)、もしくはプラットフォーム固有の物理フォント名を指定します。書体はPLAIN/BOLD/ITALIC/BOLDITALIC(大文字小文字の区別はなし)のいずれかです。サイズは整数で単位はポイントです。例:セリフ付きの18ポイントフォントを使用する。 monsia.user.font=Serif-PLAIN-18#### monsia.user.font.XXX特定の画面部品タイプ(ボタンなど)に固有のフォントを指定します。XXXの部分には以下のものが使用できます。* button* togglebutton* radiobutton* combobox* tabbedpane* label* textfield* table例:ボタンに14ポイント、ラベルに12ポイントのセリフ付きフォントを使用する。 monsia.user.font.button=Serif-PLAIN-14 monsia.user.font.label=Serif-PLAIN-12monsia.user.fontよりも、これらの値の方が優先されます。#### monsia.warn.certificate.expiration.beforeクライアント証明書の有効期限切れの警告を行う日数を指定します。単位は日です。無指定時は30となっており、有効期限切れの30日前から警告が行われます。例:有効期限切れの一週間前から警告を表示する。 monsia.warn.certificate.expiration.before=7## スタイルファイルについてスタイルファイルを独自に定義する場合、以下に従ってください。### 書式Javaのプロパティファイルです。以下のように指定します。* スタイル名.font=フォント名-書体-サイズ* スタイル名.fg=色指定* スタイル名.bg=色指定フォント名は monsia.user.font プロパティと同様の書式で指定できます。色指定の値は # 記号に続けて色のRGB値を表す6桁の16進数を記述します。fgの同義語としてかわりに foreground、bgの同義語としてかわりに backgroundも使用できます。### エンコーディングについてJavaのプロパティファイルでは、仕様上、プラットフォームネイティブな文字エンコーディングを出来ないので、「ＭＳゴシック」のような非ASCII文字列を含む場合は、native2asciiを使用して \uxxxx 形式に変換する必要があります。## ルック&フィールのテーマについてルック&フィールがNimrodの場合に、ルック＆フィールのテーマにテーマファイルを指定することでGUI部品の配色を変更することができます。テーマファイルはパッケージのthemeフォルダ以下にあります。パッケージに含まれているテーマは以下です。* LightPastelBlue.theme* LightPastelRed.theme* LightTabaco.theme* Macchya.theme* Snow.theme* Sumire.themeまた共通版パッケージに含まれているテーマエディター(nimrodlf.jar)を使用することで、オリジナルテーマファイルを作成できます。テーマファイル及びテーマエディターの詳細については、以下のURLを参照してください。* http://personales.ya.com/nimrod/themes-en.html## プロキシについてWebアクセスにプロキシが必要な環境では、以下の設定を行ってください。### MacOS X以外の場合「その他の設定」タブの「追加システムプロパティ」欄に以下の2行の内容を記述します。 http.proxyHost=ホスト名 http.proxyPort=ポート番号(注) =の左側では、大文字と小文字は区別されます。### MacOS Xの場合1. アップルメニュー→システム環境設定→ネットワーク を開きます。2. 使用しているネットワークを選択します。3. 設定...ボタンを押します。4. いちばん右の「プロキシ」タブを選択します。5. 「プロキシの設定」で「手入力」を選択します。6. 「設定するプロキシサーバを選択」リスト内の、□Webプロキシ (HTTP)にチェックを入れます。7. 「Webプロキシサーバ」欄のホストとポートを記入します。## コマンドラインオプションについてコンソールで専用ランチャーまたは汎用ランチャーを起動する際に、コマンドラインオプションを指定出来ます。### ヘルプの表示  > java -jar jmareceipt.jar -h  USAGE:jp.or.med.jma_receipt.JMAReceiptLauncher <option(s)> files...  -config : 指定された設定で接続する   []  -config-list : 設定リストを表示する   [false]### 設定リストの表示  > java -jar jmareceipt.jar -config-list  設定リスト  ------------------  192.168.1.51     ホスト:                 192.168.1.51     ポート:                 8000     アプリケーション:       panda:orca00     ユーザ:                 ormaster  default     ホスト:                 192.168.1.51     ポート:                 8000     アプリケーション:       panda:orca00     ユーザ:                 ormaster### 設定を指定してサーバへ接続  > java -jar jmareceipt.jar -config=設定名設定名に登録してあるサーバ設定を指定します。パスワードを保存しない設定の場合、パスワード入力ダイアログが表示されます。## ショートカットアイコンの作成について設定を指定するコマンドラインオプションを利用して、特定のサーバに接続するショートカットアイコンを作成することができます。### Windows XP の場合1. monsiaj-bin-YYYYMMDD.zipを展開します。2. jmareceipt.jarのショートカットを作成します。3. ショートカットを右クリックし、ショートカットのプロパティを開きます。4. ショートカットタブのリンク先の末尾に"-config=設定名"を追加します。5. ショーカットをダブルクリックするとサーバに接続します。### MacOS X の場合#### MacOS Xアプリケーションバンドル版を使用する方法(推奨)1. monsiaj-bin-macosx-YYYYMMDD.zipを展開します。2. JMAReceiptアイコンを Controlキーを押しながらクリックしてメニューを表示し、"パッケージの内容を表示"を開きます。3. JMAReceiptフォルダが表示されるので、Contentsフォルダを開きます。4. Info.plistファイルをダブルクリックし編集します。5. <key>Arguments<key> の下行の <string></string> に -config=|設定名| 記述します(下部参照)。6. Info.plist を閉じて、保存します。7. JMAReceiptアイコンをダブルクリックするとサーバに接続します。     ...       </array>        <key>Arguments</key>        <string>-config=|設定名|</string>                ^^^^^^^^^^^^^^^^        <key>Properties</key>        <dict>     ...※ 複数作成する場合は、アプリケーションバンドルの複製を作成して、複製に対して同様の手順を実行します。#### 共通版を使用する方法1. monsiaj-bin-YYYYMMDD.zipを展開します。2. Finderより、アプリケーション->AppleScript->スクリプトエディタを起動します。3. スクリプト入力欄にスクリプトを記述します(下部参照)。  * -jarの後に1文字スペースを空けて|jmareceipt.jarのフルパス|を記述します。  * -config=の後に|設定名|を記述します。4. 再生ボタンを押して、一度スクリプトを実行し日レセメイン画面が表示されるかどうか確認します。5. メイン画面が表示されたら日レセを終了します。6. スクリプトエディタのメニューから保存を選択します。7. スクリプト保存のダイアログが表示されるので、以下の設定をして保存します。  * フォーマット -> "アプリケーション"に設定  * 実行専用 -> チェックしない  * 初期画面 -> チェックしない  * 実行後、自動的に終了しない -> チェックしない8. 作成したスクリプトのアイコンをダブルクリックするとサーバに接続します。     do shell script "java -jar |jmareceipt.jarへのフルパス| -config=|設定名|"## 既知の問題### Mac OS X環境* 日本語変換ソフトの自動切り替え機能が動作しない* Mac OS Xルック＆フィールにおいて、CLISTのヘッダラベルが完全に表示されない場合がある## 設定の保存先$HOME/.monsiaj/monsiaj.propertiesにプロパティ形式で保存されます。