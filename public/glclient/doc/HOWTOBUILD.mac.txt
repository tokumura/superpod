# antを用いたビルド方法## もっとも単純なビルドコマンドラインから、 $ ant [ENTER]を実行します。ターゲット dist が実行され、dist/ディレクトリの下に* dist/monsiaj-bin-YYYYMMDD.zip* dist/monsiaj-bin-macosx-YYYYMMDD.zip* dist/monsiaj-src-YYYYMMDD.zipが生成されます。(YYYYNNDD=ビルド時の日付)このビルドの場合、* 署名は行われません。* クラスファイルにはデバッグ情報が含まれます。## ビルドのカスタマイズビルドの動作をカスタマイズするには、プロパティファイルを用います。テキストファイル build.properties(名前は任意) を作成して、目的に応じたプロパティの設定を記述し、 $ ant -propertyfile build.properties distのように実行してください。### 署名を行う場合プロパティファイルに、    do.sign=true    alias=署名する鍵のエイリアス    keystore=キーストアファイル名    webstart.url=http://... jwsを設置するURL    webstart.vendor=ベンダー名を設定して実行します。途中でキーストアのパスワードと鍵パスワードを聞かれるので答えますが、画面にエコーバック(表示)されるので安全に留意してください。sign-jars:    [input] Input the store passwordXXXXXXX[Return]    [input] Input the key passwordXXXXXXX[Return]do.signプロパティを設定してある場合、dist/ に置かれたファイル内のjarファイルは署名済みのものとなります。### デバッグオプションを外す場合デフォルトでは、コンパイルはデバッグオプション付きとなります。これを外すためには、プロパティファイルに    javac.debug=noを設定してください。含めるデバッグ情報の種別は、     javac.debuglevel=lines,vars,sourceのように、含めたいものをコンマで区切って指定します。